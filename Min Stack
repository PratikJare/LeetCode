'''
Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.

push(x) -- Push element x onto stack.
pop() -- Removes the element on top of the stack.
top() -- Get the top element.
getMin() -- Retrieve the minimum element in the stack.
 
'''
class MinStack:

    def __init__(self):
        """
        initialize your data structure here.
        """
        self.items = []
        

    def push(self, x: int) -> None:
        self.items.append(x)
        

    def pop(self) -> None:
        self.items.pop()
        

    def top(self) -> int:
        return self.items[-1]

    def getMin(self) -> int:
        if self.top is None:
            return
        else:
            return min(self.items)
        
